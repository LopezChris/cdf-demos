---
# tasks file for ansible-nifi
- name: download cfm/nifi 1.0.0 from cloudera repo
  unarchive:
    src: http://s3.amazonaws.com/dev.hortonworks.com/CFM/centos7/1.x/BUILDS/1.0.0.0-90/tars/nifi/nifi-1.9.0.1.0.0.0-90-bin.tar.gz
    dest: /usr/cdf/cfm/nifi
    owner: nifi
    group: cem
    remote_src: yes
  notify:
    - start nifi

- name: set run.as={{ nifi_run_as }} in bootstrap.conf
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/bootstrap.conf"
    regexp: '^run\.as=.*'
    line: run.as={{ nifi_run_as }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  when: nifi_run_as != "root"
  notify: restart nifi
  tags: [conf]

- name: set -Xms={{ nifi_java_min_memory }} in bootstrap.conf
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/bootstrap.conf"
    regexp: '^java\.arg\.2=.*'
    line: java.arg.2=-Xms{{ nifi_java_min_memory }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  notify: restart nifi
  tags: [conf]

- name: set -Xmx={{ nifi_java_max_memory }} in bootstrap.conf
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/bootstrap.conf"
    regexp: '^java\.arg\.3=.*'
    line: java.arg.3=-Xmx{{ nifi_java_max_memory }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  notify: restart nifi
  tags: [conf]

- name: use gzip compression for logs in logback.xml
  replace:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/logback.xml"
    regexp: '^(.*)\.log<\/fileNamePattern>$'
    replace: '\1.log.gz</fileNamePattern>'
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf]

- name: set site-to-site hostname to {{ inventory_hostname }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.remote\.input\.host=.*'
    line: nifi.remote.input.host={{ nifi_remote_input_host }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf]

- name: set site-to-site port to {{ nifi_remote_input_socket_port }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.remote\.input\.socket\.port=.*'
    line: nifi.remote.input.socket.port={{ nifi_remote_input_socket_port }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf]

- name: set web http hostname to {{ inventory_hostname }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.web\.http\.host=.*'
    line: nifi.web.http.host={{ nifi_web_http_host }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf]

- name: set web http port to {{ nifi_web_http_port }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.web\.http\.port=.*'
    line: nifi.web.http.port={{ nifi_web_http_port }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf]

- name: set cluster is node to {{ nifi_cluster_is_node | lower }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.cluster\.is\.node=.*'
    line: nifi.cluster.is.node={{ nifi_cluster_is_node | lower }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf,cluster]

- name: set cluster node address to {{ inventory_hostname }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.cluster\.node\.address=.*'
    line: nifi.cluster.node.address={{ inventory_hostname }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf,cluster]

- name: set cluster node protocol port to {{ nifi_cluster_node_protocol_port }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.cluster\.node\.protocol\.port=.*'
    line: nifi.cluster.node.protocol.port={{ nifi_cluster_node_protocol_port }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf,cluster]

- name: set enable embedded zookeeper to {{ nifi_zk_use_embedded | lower }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.state\.management\.embedded\.zookeeper\.start=.*'
    line: nifi.state.management.embedded.zookeeper.start={{ nifi_zk_use_embedded | lower }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf,cluster,zookeeper]

- name: set zookeeper connect string to {{ nifi_zk_connect_string }} in nifi.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/nifi.properties"
    regexp: '^nifi\.zookeeper\.connect\.string=.*'
    line: nifi.zookeeper.connect.string={{ nifi_zk_connect_string }}
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf,cluster,zookeeper]

- name: add hosts to zookeeper.properties
  lineinfile:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/zookeeper.properties"
    regexp: '^server\.{{ item.0 + 1 }}=.*'
    line: "server.{{ item.0 + 1 }}={{ item.1 }}:{{ nifi_zk_port_range }}"
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  with_indexed_items: "{{ ansible_play_hosts }}"
  when: nifi_cluster_is_node|bool and nifi_zk_use_embedded|bool
  tags: [conf,cluster,zookeeper]

- name: create "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/state/zookeeper" directory
  file:
    path: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/state/zookeeper"
    state: directory
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    mode: 0755
  when: nifi_cluster_is_node|bool and nifi_zk_use_embedded|bool
  tags: [conf,cluster,zookeeper]

- name: set zookeeper id in zookeeper myid file
  copy:
    content: "{{ ansible_play_hosts.index(inventory_hostname) + 1 }}"
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/state/zookeeper/myid"
    mode: 0644
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
  when: nifi_cluster_is_node|bool and nifi_zk_use_embedded|bool
  tags: [conf,cluster,zookeeper]

- name: set zookeeper connect string to {{ nifi_zk_connect_string }} in state-management.xml
  replace:
    dest: "/usr/cdf/cfm/nifi/nifi-1.9.0.1.0.0.0-90/conf/state-management.xml"
    regexp: '^(\s*)<property name="Connect String">[^<]*<\/property>\s*'
    replace: '\1<property name="Connect String">{{ nifi_zk_connect_string }}</property>\n'
    owner: "{{ nifi_run_as }}"
    group: "{{ nifi_run_as }}"
    backup: yes
  tags: [conf,cluster,zookeeper]

- name: install systemd nifi.service
  template:
    src: templates/nifi.service.j2
    dest: /etc/systemd/system/nifi.service
    mode: 0644
    backup: yes
  when: nifi_install_service|bool
  tags: [conf,systemd]

- name: enable nifi.service
  service:
    name: nifi
    state: started
    enabled: yes
  when: nifi_install_service|bool
  tags: [conf,systemd]

- file:
    path: /usr/cdf/cfm/nifi
    owner: nifi
    group: cfm
    mode: 0775
    recurse: yes